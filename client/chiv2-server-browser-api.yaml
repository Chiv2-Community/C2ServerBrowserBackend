openapi: 3.0.0
info:
  title: Server Browser API
  version: 1.0.0
paths:
  /api/v1/servers:
    get:
      summary: Get a list of registered game servers.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerListResponse'
    post:
      summary: Register a game server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerRegistrationRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationSuccessfulResponse'
        '403':
          description: Banned from the server browser
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/v1/servers/{unique_id}:
    put:
      summary: Update the listing for a game server. This does not count as a heartbeat
      parameters:
        - in: header
          name: X-CHIV2-SERVER-BROWSER-KEY
          description: The key provided at registration time
          required: true
          schema:
            type: string
        - in: path
          name: unique_id
          description: The unique id of the server being updated
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerUpdateRequest'
      responses:
        '400':
          description: Something in your request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: You did something you're not allowed to do with the parameters provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSuccessfulResponse'
  /api/v1/servers/{unique_id}/heartbeat:
    post:
      summary: Send a keepalive signal to stay on the server list
      parameters:
        - in: path
          name: unique_id
          description: The unique id of the server being updated
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Something in your request is malformed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: You did something you're not allowed to do with the parameters provided.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSuccessfulResponse'
components:
  schemas:
    ServerUpdateRequest:
      type: object
      required:
        - port
        - player_count
        - current_map
        - max_players
      properties:
        port:
          type: integer
          format: int32
          description: The port number the server is running on
        player_count:
          type: integer
          format: int32
          description: The number of players currently on the server
        max_players:
          type: integer
          format: int32
          description: The max number of players the server allows
        current_map:
          type: string
          description: The current map being played on the server
    Mod:
      type: object
      required:
        - name
        - organization
        - version
      properties:
        name:
          type: string
          description: The name of the mod
        organization:
          type: string
          description: The organization that provides the mod
        version:
          type: string
          description: The version of the mod
    ServerListResponse:
      type: object
      required:
        - servers
      properties:
        servers:
          type: array
          items:
            $ref: '#/components/schemas/Server'
          description: A list of servers
    Server:
      type: object
      required:
        - unique_id
        - ip_address
        - port
        - name
        - description
        - current_map
        - player_count
        - max_players
        - mods
      properties:
        unique_id:
          type: string
          description: The unique identifier of this server
        ip_address:
          type: string
          description: The IP address of the server
        port:
          type: integer
          format: int32
          description: The port number the server is running on
        name:
          type: string
          description: The name of the server
        description:
          type: string
          description: A description of the server
        current_map:
          type: string
          description: The current map being played on the server
        player_count:
          type: integer
          format: int32
          description: The number of players currently on the server
        max_players:
          type: integer
          format: int32
          description: The max number of players on the server
        mods:
          type: array
          items:
            $ref: '#/components/schemas/Mod'
          description: A list of mods running on the server
    ServerRegistrationRequest:
      type: object
      required:
        - port
        - name
        - description
        - current_map
        - player_count
        - max_players
        - mods
      properties:
        port:
          type: integer
          format: int32
          description: The port number the server is running on
        name:
          type: string
          description: The name of the server
        description:
          type: string
          description: A description of the server
        current_map:
          type: string
          description: The current map being played on the server
        player_count:
          type: integer
          format: int32
          description: The number of players currently on the server
        max_players:
          type: integer
          format: int32
          description: The max number of players on the server
        mods:
          type: array
          items:
            $ref: '#/components/schemas/Mod'
          description: A list of mods running on the server
    RegistrationSuccessfulResponse:
      type: object
      required:
        - refresh_before
        - server
      properties:
        key:
          type: string
          description: To be used as the X-CHIV2-SERVER-BROWSER-KEY header
        refresh_before:
          type: number
          format: double
          description: Unix timestamp for when the server should refresh its registration. Only present if operation was successful
        server:
          $ref: '#/components/schemas/ServerRegistrationRequest'
    UpdateSuccessfulResponse:
      type: object
      required:
        - refresh_before
        - server
      properties:
        server:
          $ref: '#/components/schemas/ServerRegistrationRequest'
        refresh_before:
          type: number
          format: double
          description: Unix timestamp for when the server should refresh its registration. Only present if operation was successful
    ErrorResponse:
      type: object
      required:
        - status
      properties:
        message:
          type: string
          description: a human readable message about the error
        context: 
          type: string
          description: when json is malformed, this provides the json object containing the error.
        status:
          type: string
          enum:
            - banned
            - not_registered
            - no_key
            - invalid_json_body
            - forbidden
  
